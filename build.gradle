plugins {
    id 'java'
    id 'war'
}

group 'com.example'
version '1.0'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.9.2'
    springVersion = "5.3.24"
    log4j2Version = "2.20.0"
}

sourceCompatibility = '11'
targetCompatibility = '11'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    /* logger start */
    implementation 'commons-logging:commons-logging:1.2'
    // slf4j
    implementation 'org.slf4j:slf4j-api:2.0.0'
    // log4j2
    implementation "org.apache.logging.log4j:log4j-api:${log4j2Version}"
    implementation "org.apache.logging.log4j:log4j-core:${log4j2Version}"
    // slf4j-log4j2-bridge
    //   Log4j 2 SLF4J Binding
    //   link : https://logging.apache.org/log4j/2.x/log4j-slf4j-impl.html
    implementation "org.apache.logging.log4j:log4j-slf4j2-impl:${log4j2Version}"
    /* logger end */


    // SPRING FRAMEWORK //
    /* spring-framework start */
    implementation "org.springframework:spring-core:${springVersion}"
    implementation "org.springframework:spring-context:${springVersion}"
    implementation "org.springframework:spring-beans:${springVersion}"
    implementation "org.springframework:spring-aop:${springVersion}"
    implementation "org.springframework:spring-expression:${springVersion}" // SpEL
    testImplementation "org.springframework:spring-test:${springVersion}"
    /* spring-framework end */
    /* spring-web start */
    implementation "org.springframework:spring-web:${springVersion}"
    implementation "org.springframework:spring-webmvc:${springVersion}"
    /* spring-web end */


    compileOnly 'javax.servlet:javax.servlet-api:4.0.0'
    compileOnly 'javax.servlet.jsp:javax.servlet.jsp-api:2.3.1'
    implementation 'javax.servlet.jsp.jstl:javax.servlet.jsp.jstl-api:1.2.2'
    implementation 'org.glassfish.web:javax.servlet.jsp.jstl:1.2.2'


    implementation 'org.yaml:snakeyaml:1.33'


    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}
